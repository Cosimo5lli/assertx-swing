package org.assertx.swing

import org.assertx.swing.assertXSwing.AXSTestCase
import org.assertx.swing.jvmmodel.AssertXSwingJvmModelInferrer
import org.assertx.swing.assertXSwing.AXSSettings
import org.assertx.swing.assertXSwing.AXSTestMethod

class AssertXSwingStaticExtensions {

	def static getCheckedFieldName(AXSTestCase tc) {
		tc.fieldName ?: 'window'
	}

	def static getCheckedTypeRefName(AXSTestCase tc) {
		tc.testedTypeRef?.simpleName ?: Void.TYPE.simpleName
	}

	def static private isAutogeneratedName(String it) {
		equals(AssertXSwingJvmModelInferrer.BEFORE_CLASS_METHOD_NAME) ||
			equals(AssertXSwingJvmModelInferrer.BEFORE_METHOD_NAME) ||
			equals(AssertXSwingJvmModelInferrer.AFTER_METHOD_NAME) ||
			equals(AssertXSwingJvmModelInferrer.BEFORE_CLASS_METHOD_NAME + '()') ||
			equals(AssertXSwingJvmModelInferrer.BEFORE_METHOD_NAME + '()') ||
			equals(AssertXSwingJvmModelInferrer.AFTER_METHOD_NAME + '()')
	}

	def static isAutogeneratedMethodName(String it) {
		isAutogeneratedName || equals(AssertXSwingJvmModelInferrer.SETTINGS_METHOD_NAME) ||
			equals(AssertXSwingJvmModelInferrer.SETTINGS_METHOD_NAME + '()')
	}

	def static isAutogeneratedFrom(String it, AXSTestCase tc) {
		isAutogeneratedName || (tc.settings !== null &&
			(equals(AssertXSwingJvmModelInferrer.SETTINGS_METHOD_NAME) ||
				equals(AssertXSwingJvmModelInferrer.SETTINGS_METHOD_NAME + '()')))
	}
	
	def static getSettings(AXSTestCase tc){
		tc.members.filter(AXSSettings).head
	}
	
	def static getTests(AXSTestCase tc){
		tc.members.filter(AXSTestMethod)
	}
	
	def static setSettings(AXSTestCase tc, AXSSettings settings){
		tc.members.removeAll(tc.members.filter(AXSSettings))
		tc.members += settings
	}
}
