/*
 * generated by Xtext 2.13.0
 */
package org.assertx.swing.ui.labeling

import com.google.inject.Inject
import org.assertx.swing.assertXSwing.AXSFile
import org.assertx.swing.assertXSwing.AXSMatcher
import org.assertx.swing.assertXSwing.AXSSettings
import org.assertx.swing.assertXSwing.AXSTestCase
import org.assertx.swing.assertXSwing.AXSTestMethod
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.jface.viewers.StyledString
import org.eclipse.xtext.common.types.JvmParameterizedTypeReference
import org.eclipse.xtext.xbase.ui.labeling.XbaseLabelProvider

import static extension org.assertx.swing.util.AssertXSwingStaticExtensions.getCheckedTypeRefName

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class AssertXSwingLabelProvider extends XbaseLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(AXSTestMethod tm) {
		new StyledString(tm.name)
	}

	def text(AXSSettings s) {
		new StyledString('Settings')
	}

	def text(AXSMatcher matcher) {
		new StyledString(matcher.name).append(
			matcher.typeRef.getStyledText
		)
	}

	def text(AXSTestCase tc) {
		new StyledString(tc.name).append(
			tc.typeRef.getStyledText
		)
	}

	def text(JvmParameterizedTypeReference ref) {
		new StyledString(' : ' + ref.checkedTypeRefName, StyledString.DECORATIONS_STYLER)
	}

	def text(String s) {
		new StyledString(s.substring(0, s.indexOf(':'))).append(
			new StyledString(s.substring(s.indexOf(':')), StyledString.DECORATIONS_STYLER)
		)
	}

	def image(AXSTestMethod tm) {
		'methpub_obj.gif'
	}

	def image(AXSMatcher m) {
		'methpro_obj.gif'
	}

	def image(AXSSettings s) {
		'field_public_obj.gif'
	}

	def image(AXSFile f) {
		'package_obj.gif'
	}

	def image(AXSTestCase tc) {
		'test_case.gif'
	}

	def image(String s) {
		s
	}
}
