<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.assertx.swing</groupId>
	<version>1.0.0-SNAPSHOT</version>
	<artifactId>org.assertx.swing.parent</artifactId>
	<packaging>pom</packaging>

	<properties>
		<tycho-version>1.0.0</tycho-version>
		<xtextVersion>2.13.0</xtextVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- Always refer to the corresponding tests project (if it exists) otherwise 
			Sonarqube won't be able to collect code coverage. For example, when analyzing 
			project foo it wouldn't find code coverage information if it doesn't use 
			foo.tests jacoco.exec. -->
		<sonar.jacoco.reportPaths>
			../${project.artifactId}.tests/target/jacoco.exec
		</sonar.jacoco.reportPaths>
		<sonar.exclusions>
			**/src-gen/**,
			**/xtend/**,
			**/*RuntimeModule.java,
			**/*UiModule.java,
			**/*StandaloneSetup*.java,
			**/*Activator.java
		</sonar.exclusions>
		<sonar.tests.exclusions>
			**/src-gen/**,
			**/xtend/**,
			**/*RuntimeModule.java,
			**/*UiModule.java,
			**/*StandaloneSetup*.java,
			**/*Activator.java
		</sonar.tests.exclusions>
		<!-- <sonar.coverage.exclusions>${sonar.exclusions}</sonar.coverage.exclusions> -->
		<!--normal behaviour is to generate SuppressWarnings("All") annotations 
			when compiling xtend sources -->
		<generateSuppressWarnings>true</generateSuppressWarnings>

		<!-- configuring sonarqube's rules to be deactivated -->
		<sonar.issue.ignore.multicriteria>e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23</sonar.issue.ignore.multicriteria>

		<!-- deep inheritance is due to the use of the xtext framework, nothing 
			I can change -->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>squid:MaximumInheritanceDepth</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e1.resourceKey>

		<!-- local variable name should match ^[a-v][a-zA-Z0-9]$ : unless I find 
			a way to customize the rule, I must set it to off for Java files compiled 
			from Xtend sources, since they contain lots of synthetic variables starting 
			with _ -->
		<sonar.issue.ignore.multicriteria.e2.ruleKey>squid:S00117</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>**/xtend-gen/**/*.java</sonar.issue.ignore.multicriteria.e2.resourceKey>

		<!-- Nested code blocks should not be used : disabling this rule for Java 
			files compiled from Xtend sources since Xtend compiler sometimes surround 
			code with blocks even if not necessary -->
		<sonar.issue.ignore.multicriteria.e3.ruleKey>squid:S1199</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>**/xtend-gen/**/*.java</sonar.issue.ignore.multicriteria.e3.resourceKey>

		<!-- Lamdbas containing only one statement should not nest this statement 
			in a block: Xtend compiler will do this, so disabling the rule for Java files 
			compiled from Xtend sources -->
		<sonar.issue.ignore.multicriteria.e4.ruleKey>squid:S1602</sonar.issue.ignore.multicriteria.e4.ruleKey>
		<sonar.issue.ignore.multicriteria.e4.resourceKey>**/xtend-gen/**/*.java</sonar.issue.ignore.multicriteria.e4.resourceKey>

		<!-- Lambdas should be replaced with method references: not when compiling 
			from Xtend -->
		<sonar.issue.ignore.multicriteria.e5.ruleKey>squid:S1612</sonar.issue.ignore.multicriteria.e5.ruleKey>
		<sonar.issue.ignore.multicriteria.e5.resourceKey>**/xtend-gen/**/*.java</sonar.issue.ignore.multicriteria.e5.resourceKey>

		<!-- Field names should comply with a naming convention: I disable this 
			for every Java file compiled from Xtend surces due to the fact that @Extension 
			field are given a name that starts with _ -->
		<sonar.issue.ignore.multicriteria.e20.ruleKey>squid:S00116</sonar.issue.ignore.multicriteria.e20.ruleKey>
		<sonar.issue.ignore.multicriteria.e20.resourceKey>**/xtend-gen/**/*.java</sonar.issue.ignore.multicriteria.e20.resourceKey>

		<!-- Cognitive Complexity of methods should not be too high: in this classes 
			is caused by the dispatch methods compilation -->
		<sonar.issue.ignore.multicriteria.e6.ruleKey>squid:S3776</sonar.issue.ignore.multicriteria.e6.ruleKey>
		<sonar.issue.ignore.multicriteria.e6.resourceKey>**/AssertXSwingFormatter.java</sonar.issue.ignore.multicriteria.e6.resourceKey>

		<sonar.issue.ignore.multicriteria.e13.ruleKey>squid:S3776</sonar.issue.ignore.multicriteria.e13.ruleKey>
		<sonar.issue.ignore.multicriteria.e13.resourceKey>**/AssertXSwingTypeComputer.java</sonar.issue.ignore.multicriteria.e13.resourceKey>

		<!-- "@Override" should be used on overriding and implementing methods: 
			Xtend compiler doesn't annotate overrided methods which results from the 
			compilation of dispatch methods -->
		<sonar.issue.ignore.multicriteria.e7.ruleKey>squid:S1161</sonar.issue.ignore.multicriteria.e7.ruleKey>
		<sonar.issue.ignore.multicriteria.e7.resourceKey>**/AssertXSwingFormatter.java</sonar.issue.ignore.multicriteria.e7.resourceKey>

		<sonar.issue.ignore.multicriteria.e11.ruleKey>squid:S1161</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>**/AssertXSwingJvmModelInferrer.java</sonar.issue.ignore.multicriteria.e11.resourceKey>

		<sonar.issue.ignore.multicriteria.e14.ruleKey>squid:S1161</sonar.issue.ignore.multicriteria.e14.ruleKey>
		<sonar.issue.ignore.multicriteria.e14.resourceKey>**/AssertXSwingTypeComputer.java</sonar.issue.ignore.multicriteria.e14.resourceKey>

		<!-- Jump statements should not be redundant: in this classes is caused 
			by the dispatch methods compilation -->
		<sonar.issue.ignore.multicriteria.e8.ruleKey>squid:S3626</sonar.issue.ignore.multicriteria.e8.ruleKey>
		<sonar.issue.ignore.multicriteria.e8.resourceKey>**/AssertXSwingFormatter.java</sonar.issue.ignore.multicriteria.e8.resourceKey>

		<sonar.issue.ignore.multicriteria.e12.ruleKey>squid:S3626</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>**/AssertXSwingJvmModelInferrer.java</sonar.issue.ignore.multicriteria.e12.resourceKey>

		<sonar.issue.ignore.multicriteria.e15.ruleKey>squid:S3626</sonar.issue.ignore.multicriteria.e15.ruleKey>
		<sonar.issue.ignore.multicriteria.e15.resourceKey>**/AssertXSwingTypeComputer.java</sonar.issue.ignore.multicriteria.e15.resourceKey>

		<!-- Modifiers should be declared in the correct order: disabling on Java 
			files compiled from Xtend sources since I have no power in deciding the order 
			of modifiers, it's all up to the Xtend compiler, and it prefers "public final 
			static" -->
		<sonar.issue.ignore.multicriteria.e9.ruleKey>squid:ModifiersOrderCheck</sonar.issue.ignore.multicriteria.e9.ruleKey>
		<sonar.issue.ignore.multicriteria.e9.resourceKey>**/xtend-gen/**/*.java</sonar.issue.ignore.multicriteria.e9.resourceKey>

		<!-- Method names should comply with a naming convention: some methods 
			name have to start with _ for working with the xtext framework -->
		<sonar.issue.ignore.multicriteria.e10.ruleKey>squid:S00100</sonar.issue.ignore.multicriteria.e10.ruleKey>
		<sonar.issue.ignore.multicriteria.e10.resourceKey>**/AssertXSwingJvmModelInferrer.java</sonar.issue.ignore.multicriteria.e10.resourceKey>

		<sonar.issue.ignore.multicriteria.e16.ruleKey>squid:S00100</sonar.issue.ignore.multicriteria.e16.ruleKey>
		<sonar.issue.ignore.multicriteria.e16.resourceKey>**/AssertXSwingFormatter.java</sonar.issue.ignore.multicriteria.e16.resourceKey>

		<sonar.issue.ignore.multicriteria.e17.ruleKey>squid:S00100</sonar.issue.ignore.multicriteria.e17.ruleKey>
		<sonar.issue.ignore.multicriteria.e17.resourceKey>**/AssertXSwingTypeComputer.java</sonar.issue.ignore.multicriteria.e17.resourceKey>

		<sonar.issue.ignore.multicriteria.e18.ruleKey>squid:S00100</sonar.issue.ignore.multicriteria.e18.ruleKey>
		<sonar.issue.ignore.multicriteria.e18.resourceKey>**/AssertXSwingOutlineTreeProvider.java</sonar.issue.ignore.multicriteria.e18.resourceKey>

		<!-- Unused method parameters should be removed: in this classes they are 
			necessary for method dispatching -->
		<sonar.issue.ignore.multicriteria.e19.ruleKey>squid:S1172</sonar.issue.ignore.multicriteria.e19.ruleKey>
		<sonar.issue.ignore.multicriteria.e19.resourceKey>**/AssertXSwingOutlineTreeProvider.java</sonar.issue.ignore.multicriteria.e19.resourceKey>

		<sonar.issue.ignore.multicriteria.e21.ruleKey>squid:S1172</sonar.issue.ignore.multicriteria.e21.ruleKey>
		<sonar.issue.ignore.multicriteria.e21.resourceKey>**/AssertXSwingJvmModelInferrer.java</sonar.issue.ignore.multicriteria.e21.resourceKey>

		<sonar.issue.ignore.multicriteria.e22.ruleKey>squid:S1172</sonar.issue.ignore.multicriteria.e22.ruleKey>
		<sonar.issue.ignore.multicriteria.e22.resourceKey>**/AssertXSwingLabelProvider.java</sonar.issue.ignore.multicriteria.e22.resourceKey>

		<!-- Collapsible "if" statements should be merged: in this file they are 
			generated by the compilation of the switch statement -->
		<sonar.issue.ignore.multicriteria.e23.ruleKey>squid:S1066</sonar.issue.ignore.multicriteria.e23.ruleKey>
		<sonar.issue.ignore.multicriteria.e23.resourceKey>**/AssertXSwingLabelProvider.java</sonar.issue.ignore.multicriteria.e23.resourceKey>

	</properties>

	<modules>
		<module>org.assertx.swing</module>
		<module>org.assertx.swing.ide</module>
		<module>org.assertx.swing.ui</module>
		<module>org.assertx.swing.target</module>
		<module>org.assertx.swing.feature</module>
		<module>org.assertx.swing.repository</module>
		<module>org.assertx.swing.tests</module>
		<module>org.assertx.swing.ui.tests</module>
		<module>org.assertj.swing</module>
		<module>org.assertx.swing.tests.examplewindow</module>
		<module>org.assertx.swing.tests.report</module>
	</modules>

	<profiles>
		<profile>
			<id>sonar-analysis</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- when we want to analyze the project with Sonarqube we need this 
					off -->
				<generateSuppressWarnings>false</generateSuppressWarnings>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-source-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<id>plugin-source</id>
						<goals>
							<goal>plugin-source</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho.extras</groupId>
				<artifactId>tycho-source-feature-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<id>source-feature</id>
						<phase>package</phase>
						<goals>
							<goal>source-feature</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<id>attach-p2-metadata</id>
						<phase>package</phase>
						<goals>
							<goal>p2-metadata</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<target>
						<artifact>
							<groupId>org.assertx.swing</groupId>
							<artifactId>org.assertx.swing.target</artifactId>
							<version>${project.version}</version>
						</artifact>
					</target>
					<environments>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<jacocoReports>
						<!-- by default Jacoco generates its report here -->
						<jacocoReport>${project.basedir}/org.assertx.swing.tests.report/target/site/jacoco-aggregate/jacoco.xml</jacocoReport>
					</jacocoReports>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.xtend</groupId>
					<artifactId>xtend-maven-plugin</artifactId>
					<version>${xtextVersion}</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>xtend-install-debug-info</goal>
								<goal>testCompile</goal>
								<goal>xtend-test-install-debug-info</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<xtendAsPrimaryDebugSource>true</xtendAsPrimaryDebugSource>
						<!-- whether or not generate SuppressWarnings("All") annotations when 
							compiling xtend sources -->
						<generateSyntheticSuppressWarnings>${generateSuppressWarnings}</generateSyntheticSuppressWarnings>
						<outputDirectory>${basedir}/xtend-gen</outputDirectory>
						<testOutputDirectory>${basedir}/xtend-gen</testOutputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>${basedir}/xtend-gen</directory>
								<includes>
									<include>**/*</include>
								</includes>
								<directory>${basedir}/xtend-gen</directory>
								<includes>
									<include>**/*</include>
								</includes>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-resources-plugin
										</artifactId>
										<versionRange>
											[2.4.3,)
										</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>testResources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.9.1,)
										</versionRange>
										<goals>
											<goal>add-resource</goal>
											<goal>add-source</goal>
											<goal>add-test-resource</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.eclipse.tycho
										</groupId>
										<artifactId>
											tycho-compiler-plugin
										</artifactId>
										<versionRange>
											[0.23.1,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.eclipse.tycho
										</groupId>
										<artifactId>
											tycho-packaging-plugin
										</artifactId>
										<versionRange>
											[0.23.1,)
										</versionRange>
										<goals>
											<goal>build-qualifier</goal>
											<goal>build-qualifier-aggregator</goal>
											<goal>validate-id</goal>
											<goal>validate-version</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<!-- Can be removed after first generator execution https://bugs.eclipse.org/bugs/show_bug.cgi?id=480097 -->
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-compiler-plugin</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<compilerArgument>-err:-forbidden</compilerArgument>
						<useProjectSettings>false</useProjectSettings>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<repositories>
		<repository>
			<id>codehaus-snapshots</id>
			<name>disable dead 'Codehaus Snapshots' repository, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=481478</name>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<name>disable dead 'Codehaus Snapshots' repository, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=481478</name>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
	</dependencies>
</project>
